/*
* Prefixed by https://autoprefixer.github.io
* PostCSS: v8.4.14,
* Autoprefixer: v10.4.7
* Browsers: last 4 version
*/

@charset "UTF-8";

$Beige: #FBF6EB;
$Black: #000000;
$White: #ffffff;
$Indigo : #1A343F;
$skyBlue: #b3d4fc;
$BlackOpa: rgba(0,0,0,0.6);
$Bold : 700;
$Normal : 500;
$Light: 100;


@mixin set-color($bg-color, $color) {
    color: $color;
    background-color: $bg-color;
}

@mixin set-size($width, $height) {
    width: $width;
    height: $height;
}
	
@mixin blind {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    border: 0;
    white-space: nowrap;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
  }

@mixin textEffect($default: 1) {
    @if ($default==1){
        -webkit-transform: translate(0,0) rotate(.001deg);
            -ms-transform: translate(0,0) rotate(.001deg);
                transform: translate(0,0) rotate(.001deg);
                -webkit-transition: opacity 1s cubic-bezier(.32,.94,.6,1),-webkit-transform 1s cubic-bezier(.15,.85,.45,1);
                transition: opacity 1s cubic-bezier(.32,.94,.6,1),-webkit-transform 1s cubic-bezier(.15,.85,.45,1);
                -o-transition: transform 1s cubic-bezier(.15,.85,.45,1),opacity 1s cubic-bezier(.32,.94,.6,1);
                transition: transform 1s cubic-bezier(.15,.85,.45,1),opacity 1s cubic-bezier(.32,.94,.6,1);
                transition: transform 1s cubic-bezier(.15,.85,.45,1),opacity 1s cubic-bezier(.32,.94,.6,1),-webkit-transform 1s cubic-bezier(.15,.85,.45,1);
                -webkit-transform: translate(0, 100%);
                -ms-transform: translate(0, 100%);
                transform: translate(0, 100%);
                -webkit-transition: opacity 0.7s cubic-bezier(0.19, 1, 0.22, 1), -webkit-transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
                transition: opacity 0.7s cubic-bezier(0.19, 1, 0.22, 1), -webkit-transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
                -o-transition: opacity 0.7s cubic-bezier(0.19, 1, 0.22, 1), transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
                transition: opacity 0.7s cubic-bezier(0.19, 1, 0.22, 1), transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
                transition: opacity 0.7s cubic-bezier(0.19, 1, 0.22, 1), transform 0.7s cubic-bezier(0.19, 1, 0.22, 1), -webkit-transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
                opacity: 0;

        
    }

    @else {
        opacity: 1;
        -webkit-transform: translate(0, 0) rotate(0.001deg);
        -ms-transform: translate(0, 0) rotate(0.001deg);
        transform: translate(0, 0) rotate(0.001deg);
        -webkit-transition: opacity 1s cubic-bezier(0.32, 0.94, 0.6, 1), -webkit-transform 1s cubic-bezier(0.15, 0.85, 0.45, 1);
        transition: opacity 1s cubic-bezier(0.32, 0.94, 0.6, 1), -webkit-transform 1s cubic-bezier(0.15, 0.85, 0.45, 1);
       -o-transition: transform 1s cubic-bezier(0.15, 0.85, 0.45, 1), opacity 1s cubic-bezier(0.32, 0.94, 0.6, 1);
       transition: transform 1s cubic-bezier(0.15, 0.85, 0.45, 1), opacity 1s cubic-bezier(0.32, 0.94, 0.6, 1);
       transition: transform 1s cubic-bezier(0.15, 0.85, 0.45, 1), opacity 1s cubic-bezier(0.32, 0.94, 0.6, 1), -webkit-transform 1s cubic-bezier(0.15, 0.85, 0.45, 1);
    }
    
}

@mixin ellipsis($lines: 1) {
    @if ($lines==1) {
      white-space: nowrap;
      overflow: hidden;
      -o-text-overflow: ellipsis;
         text-overflow: ellipsis;
    }
    @else {
      display: -webkit-box;
      overflow: hidden;
      -o-text-overflow: ellipsis;
         text-overflow: ellipsis;
      -webkit-line-clamp: $lines;
      -webkit-box-orient: vertical;
    }
  }

@mixin flex($dir: 'row', $justify: 'cen' ,$align: 'cen') {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    @if ($dir=='row'){
        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
            -ms-flex-direction: row;
                flex-direction: row;
    }

    @else {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
            -ms-flex-direction: column;
                flex-direction: column;
    }

    @if ($justify=='cen') {
        -webkit-box-pack: center;
            -ms-flex-pack: center;
                justify-content: center;
    }

    @else if ($justify== 'bet') {
        -webkit-box-pack: justify;
            -ms-flex-pack: justify;
                justify-content: space-between;
    }

    @else if ($justify=='str') {
        -webkit-box-pack: start;
            -ms-flex-pack: start;
                justify-content: flex-start;
    }

    @else if ($justify=='end') {
        -webkit-box-pack: end;
            -ms-flex-pack: end;
                justify-content: flex-end;
    }

    @else if ($justify=='aro') {
        -ms-flex-pack: distribute;
            justify-content: space-around;
    }

    @if ($align== 'cen') {
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center;
    }

    @else if ($align== 'str'){
        -webkit-box-align: start;
            -ms-flex-align: start;
                align-items: flex-start;
    }

    @else if ($align== 'end'){
        -webkit-box-align: end;
            -ms-flex-align: end;
                align-items: flex-end;
    }
}

@mixin font($size, $weight ,$lineH, $color) {
    font-size: $size;
    font-weight: $weight;
    line-height: $lineH;
    color: $color;
}

@mixin mobile{
    @media (orientation: portrait) and (max-width: 767px){ 
        @content;
    }
  }
  
@mixin tablet{
   @media (orientation: portrait) and (min-width: 768px) and (max-width: 1024px){
        @content;
    }
}

@mixin tabletRow{
    @media (orientation: landscape) and (min-width: 1025px) and (max-width: 1280px){
         @content;
     }

    @media (orientation: landscape) and (max-width: 767px){
        @content;
    }
 }

@mixin pc1920{
    @media screen and (min-width: 1280px){
         @content;
     }
 }